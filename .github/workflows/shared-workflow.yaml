name: Shared Build Workflow

on:
  workflow_call:
    inputs:
      package-name:
        description: 'The name of the package to build (e.g. conferenceapp)'
        required: true
        type: string
      android-build:
        description: 'Whether to build Android APK'
        required: false
        default: false
        type: boolean
      ios-build:
        description: 'Whether to build iOS IPA'
        required: false
        default: false
        type: boolean
      changelog:
        description: 'Changelog for the release'
        required: false
        type: string
      build-version:
        description: 'Version number for the release'
        required: false
        default: '1.0.0' 
        type: string
      build-number:
        description: 'Build number for the release'
        required: false
        default: '1'
        type: string
    secrets:
      CREDENTIAL_FILE_CONTENT:
        required: false
      FIREBASE_APP_ID:
        required: false
      APP_STORE_CONNECT_ISSUER_ID:
        required: false
      APP_STORE_CONNECT_KEY_IDENTIFIER:
        required: false
      APP_STORE_CONNECT_PRIVATE_KEY:
        required: false
      CERTIFICATE_PRIVATE_KEY:
        required: false
      APP_STORE_APP_ID:
        required: false
      SHOREBIRD_TOKEN:
        required: false

env:
  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}

jobs:
  check-formatting:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          cache: true
      
      - name: Enable melos
        run: dart pub global activate melos

      - name: Get packages 
        run: melos bootstrap

      - name: Generate Files  
        run: melos generate

      - name: Check formatting
        run: dart format --set-exit-if-changed .
        working-directory: packages/${{ inputs['package-name'] }}

      - name: Run Linter
        run: flutter analyze
        working-directory: packages/${{ inputs['package-name'] }}

  android-build:
    if: inputs.android-build == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: üê¶ Setup Shorebird
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true
      
      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          cache: true
      
      - name: Enable melos
        run: dart pub global activate melos

      - name: Get packages 
        run: melos bootstrap

      - name: Generate Files  
        run: melos generate
      
      - name: üöÄ Shorebird Release
        id: shorebird-release
        uses: shorebirdtech/shorebird-release@v0
        with:
          working-directory: packages/${{ inputs['package-name'] }}
          platform: android
          args: -- --build-name=${{ inputs.build-version }} --build-number=${{ inputs.build-number }}

      - name: Deploy Android to Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: packages/${{ inputs['package-name'] }}/build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: ${{ inputs.changelog }}

  ios-build:
    if: inputs.ios-build == true
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.sha }}
          fetch-depth: 0
      
      - name: üê¶ Setup Shorebird
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true
      
      - name: Cache CocoaPods dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cocoapods
            ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          cache: true

      - name: Enable melos
        run: dart pub global activate melos

      - name: Get packages 
        run: melos bootstrap

      - name: Generate Files  
        run: melos generate

      - name: Install dependencies
        run: flutter pub get
        working-directory: packages/${{ inputs['package-name'] }}
      
      - name: Install Codemagic CLI tools
        run: pip install codemagic-cli-tools
        working-directory: packages/${{ inputs['package-name'] }}
      
      - name: Set up keychain
        run: keychain initialize
        working-directory: packages/${{ inputs['package-name'] }}

      - name: Fetch signing files from App Store Connect
        run: |
          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) \
          --type IOS_APP_STORE \
          --create
        working-directory: packages/${{ inputs['package-name'] }}

      - name: Set up signing certificate in keychain
        run: keychain add-certificates
        working-directory: packages/${{ inputs['package-name'] }}

      - name: Set up code signing in Xcode project
        run: xcode-project use-profiles
        working-directory: packages/${{ inputs['package-name'] }}
      
      - name: üöÄ Shorebird Release
        id: shorebird-release
        uses: shorebirdtech/shorebird-release@v0
        with:
          working-directory: packages/${{ inputs['package-name'] }}
          platform: ios
          args: -- --export-options-plist=$HOME/export_options.plist --build-name=${{ inputs.build-version }} --build-number=${{ inputs.build-number }}
      
      - name: Publish the app to App Store Connect
        working-directory: packages/${{ inputs['package-name'] }}
        run: |
          APP_FILE=$(find $(pwd) -name "*.ipa")
          app-store-connect publish \
          --path "$APP_FILE" --whats-new "${{ inputs.changelog }}"
  
  patch-release:
    if: ${{ inputs.android-build == false && inputs.ios-build == false }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: üê¶ Setup Shorebird
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          cache: true

      - name: Enable melos
        run: dart pub global activate melos

      - name: Get packages
        run: melos bootstrap

      - name: Generate Files
        run: melos generate

      - name: üõ†Ô∏è Shorebird Patch for Android
        uses: shorebirdtech/shorebird-patch@v0
        id: shorebird-patch-android
        with:
          platform: android
          args: --allow-native-diffs
          working-directory: packages/${{ inputs['package-name'] }}

      - name: üõ†Ô∏è Shorebird Patch for iOS
        uses: shorebirdtech/shorebird-patch@v0
        id: shorebird-patch-ios
        with:
          platform: ios
          args: --allow-native-diffs
          working-directory: packages/${{ inputs['package-name'] }}
